<?xml version="1.0"?>
<launch>

  <!-- map server -->
  <arg name="map_file" default="$(find my_robot)/maps/restaurant_map.yaml"/>
  <node name="map_server" pkg="map_server" type="map_server" args="$(arg map_file)" />

  <!-- amcl -->
  <node name="amcl" pkg="amcl" type="amcl" output="screen" >
    <remap from="scan" to="my_robot/laser/scan"/>

    <!--Overall filter parameters-->
    <param name="initial_pose_x" value="0.0"/>  # initial x-coordinate value
    <param name="initial_pose_y" value="0.0"/>  # initial y-coordinate value
    <param name="initial_pose_a" value="0"/>  # initial yaw coordinate value
		<param name="min_particles" value="10"/>	
    <param name="max_particles" value="50"/>
		<param name="update_min_d" value="0.2"/>	#Translational movement required before performing a filter update.(default: 0.2 meters)
    <param name="update_min_a" value="0.5236"/> #Rotational movement required before performing a filter update. (default: π/6.0 radians)
    <param name="kld_err" value="0.01"/> # Maximum error between the true distribution and the estimated distribution. (double, default: 0.01)
    <param name="kld_z" value="0.99"/> # Upper standard normal quantile for (1 - p), where p is the probability that the error on the estimated distrubition will be less than kld_err.(double, default: 0.99)
    <param name="resample_interval" value="2"/> # Number of filter updates required before resampling.(int, default: 2)
    <param name="transform_tolerance" value="0.1"/> # Time with which to post-date the transform that is published, to indicate that this transform is valid into the future. (double, default: 0.1 seconds)
    <param name="recovery_alpha_slow" value="0.001"/> # Exponential decay rate for the slow average weight filter, used in deciding when to recover by adding random poses. A good value might be 0.001.(double, default: 0.0 (disabled))
    <param name="recovery_alpha_fast" value="0.1"/> # Exponential decay rate for the fast average weight filter, used in deciding when to recover by adding random poses. A good value might be 0.1.(double, default: 0.0 (disabled))
    <param name="initial_cov_xx" value="0.5*0.5"/> # Initial pose covariance (x*x), used to initialize filter with Gaussian distribution.(double, default: 0.5*0.5 meters)
    <param name="initial_cov_yy" value="0.5*0.5"/> # Initial pose covariance (y*y), used to initialize filter with Gaussian distribution.(double, default: 0.5*0.5 meters)
    <param name="initial_cov_aa" value="0.2618*0.2618"/> # Initial pose covariance (yaw*yaw), used to initialize filter with Gaussian distribution.(double, default: (π/12)*(π/12) radian)
    <param name="gui_publish_rate" value="-1.0"/> # Maximum rate (Hz) at which scans and paths are published for visualization, -1.0 to disable.(double, default: -1.0 Hz)
    <param name="save_pose_rate" value="0.5"/> # Maximum rate (Hz) at which to store the last estimated pose and covariance to the parameter server, in the variables ~initial_pose_* and ~initial_cov_*. This saved pose will be used on subsequent runs to initialize the filter. -1.0 to disable. (double, default: 0.5 Hz)
    <param name="use_map_topic" value="false"/> # When set to true, AMCL will subscribe to the map topic rather than making a service call to receive its map. New in navigation 1.4.2 (bool, default: false)
    <param name="first_map_only" value="false"/> # When set to true, AMCL will only use the first map it subscribes to, rather than updating each time a new one is received. New in navigation 1.4.2 (bool, default: false)

    <!--Laser model parameters-->
    <param name="laser_model_type" value="likelihood_field"/> # Which model to use, either beam, likelihood_field, or likelihood_field_prob.("likelihood_field")
    <param name="laser_min_range" value="-1.0"/> # Minimum scan range to be considered; -1.0 will cause the laser's reported minimum range to be used.(double, default: -1.0)
    <param name="laser_max_range" value="-1.0"/> # Maximum scan range to be considered; -1.0 will cause the laser's reported maximum range to be used.(double, default: -1.0)
		<param name="laser_max_beams" value="30"/> # How many evenly-spaced beams in each scan to be used when updating the filter.(int, default: 30)
    <param name="laser_z_hit" value="0.95"/> # Mixture weight for the z_hit part of the model.(double, default: 0.95)
    <param name="laser_z_rand" value="0.05"/> # Mixture weight for the z_rand part of the model.(double, default: 0.05)
    <param name="laser_sigma_hit" value="0.2"/> # Standard deviation for Gaussian model used in z_hit part of the model.(double, default: 0.2 meters)
<param name="laser_lambda_short" value="0.1"/> # Exponential decay parameter for z_short part of model. (double, default: 0.1)
<param name="laser_likelihood_max_dist" value="2.0"/> # Maximum distance to do obstacle inflation on map, for use in likelihood_field model.(double, default: 2.0 meters)
    
    <!--Odometry model parameters-->
    <param name="odom_model_type" value="omni-corrected"/> # Which model to use, either "diff", "omni", "diff-corrected" or "omni-corrected".(string, default: "diff")
		<param name="odom_alpha1" value="0.2"/> # Specifies the expected noise in odometry's rotation estimate from the rotational component of the robot's motion.(double, default: 0.2)
		<param name="odom_alpha2" value="0.2"/> # Specifies the expected noise in odometry's rotation estimate from translational component of the robot's motion.(double, default: 0.2)
		<param name="odom_alpha3" value="0.2"/># Specifies the expected noise in odometry's translation estimate from the translational component of the robot's motion.(double, default: 0.2)
		<param name="odom_alpha4" value="0.2"/> # Specifies the expected noise in odometry's translation estimate from the rotational component of the robot's motion.(double, default: 0.2)
		<param name="odom_alpha5" value="0.2"/> # Translation-related noise parameter (only used if model is "omni").(double, default: 0.2)
		<param name="odom_frame_id" value="odom"/> # Which frame to use for odometry.(string, default: "odom")
		<param name="base_frame_id" value="robot_footprint"/> # Which frame to use for the robot base(string, default: "base_link")
		<param name="global_frame_id" value="map"/> # The name of the coordinate frame published by the localization system(string, default: "map")
		<param name="tf_broadcast" value="tre"/> # Set this to false to prevent amcl from publishing the transform between the global frame and the odometry frame.(bool, default: true)
  </node>

  <!-- move_base -->
<!--  <node name="move_base" pkg="move_base" type="move_base" respawn="false" output="screen">-->
<!--    <remap from="scan" to="my_robot/laser/scan"/>-->
<!--    <param name="base_global_planner" value="navfn/NavfnROS" />-->
<!--    <param name="base_local_planner" value="base_local_planner/TrajectoryPlannerROS"/>-->
<!--		<rosparam file="$(find my_robot)/config/costmap_common_params.yaml" command="load" ns="global_costmap" />-->
<!--    <rosparam file="$(find my_robot)/config/costmap_common_params.yaml" command="load" ns="local_costmap" />-->
<!--    <rosparam file="$(find my_robot)/config/local_costmap_params.yaml" command="load" />-->
<!--    <rosparam file="$(find my_robot)/config/global_costmap_params.yaml" command="load" />-->
<!--    <rosparam file="$(find my_robot)/config/base_local_planner_params.yaml" command="load" />-->
<!--  </node>-->

</launch>
